@use "@angular/material" as mat;

// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.
$candy-app-primary: mat.define-palette(mat.$indigo-palette, 500);
$candy-app-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$candy-app-warn: mat.define-palette(mat.$red-palette);

// Define typografy palette, Use the default configuration.
$candy-app-typography: mat.define-typography-config();
@include mat.typography-hierarchy($candy-app-typography);

// Create the theme object (a Sass map containing all of the palettes).
//
// Define a light theme
$candy-app-theme: mat.define-light-theme(
    (
        color: (
            primary: $candy-app-primary,
            accent: $candy-app-primary,
            warn: $candy-app-warn,
        ),
    )
);

// Define a dark theme
$dark-candy-app-theme: mat.define-dark-theme(
    (
        color: (
            primary: mat.define-palette(mat.$pink-palette),
            accent: mat.define-palette(mat.$blue-grey-palette),
            warn: $candy-app-warn,
        ),
        // Only include `typography` and `density` in the default dark theme.
        typography: $candy-app-typography,
        density: 0,
    )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
// @include angular-material-theme($candy-app-theme);
// @include mat.all-component-themes($candy-app-theme);

// Apply the dark theme by default
@include mat.core-theme($candy-app-theme);
@include mat.button-theme($candy-app-theme);

// Apply the dark theme only when the user prefers dark themes.
@media (prefers-color-scheme: dark) {
    // Use the `-color` mixins to only apply color styles without reapplying the same
    // typography and density styles.
    @include mat.core-color($dark-candy-app-theme);
    @include mat.button-color($dark-candy-app-theme);
}

/* .kids-theme {
    $kids-primary: mat.define-palette(mat.$cyan-palette);
    $kids-accent: mat.define-palette(mat.$yellow-palette);

    // Typography config based on the default, but using "Comic Sans" as the
    // default font family for all levels.
    $kids-typography: mat.define-typography-config(
        $font-family: "Comic Sans",
    );

    $kids-theme: mat.define-light-theme(
        (
            color: (
                primary: $kids-primary,
                accent: $kids-accent,
            ),
            typography: $kids-typography,
        )
    );

    @include mat.all-component-themes($kids-theme);
}
 */
